Hem traineeler hem de trainerler login ve register olabiliyorlar. Register olurlarken bunun seçimini yapacaklar. Login veya register olduktan sonra token sistemi ile biz bunu kaydedebileceğiz cookie olarak. Refresh token ile de tekrar login yapabilecekler.

Trainee:
- Bu grup trainerler tarafından gelecek olan lessonları okuyacak, izleyecek ve halletikten sonra soruları cevaplayacak. Bu yüzden her bir lessonun sorusu olacak.
- Bu grup, kendi yaptığı lessonda ilerlemesini görebilecek.
- Bu grup, eğer kendilerine atanırsa chat bot ile konuşabilecek.

{ Username, Email, Password, First Name, Last Name, isTrainer }
-> Assigned Lessons
	-> { Lesson ID, Status, Assigned By, Started At, Completed At }
-> Solved Questions
	-> { Question ID, Kaç soruyu doğru, kaçını yanlış yaptığı, ne zaman yaptığı } 

Trainer:
- Bu grup, lesson oluşturabilecek. Oluşturduğu lesson'u görebilecek, lesson'u editleyebilecek, lesson'u silebilecek, lesson'u başka bir trainee'ye atayabilecek.
- Bu grup, atanan trainee'lerin ne kadar ilerleme kat ettiğini görüntüleyebilecek. Kaçının bitirdiğini ve kaçının başladığını ve kaçının şu anda in progress olduğunu görüntüleyebilecek.

Lesson:
 -> Questions (sorular, eğitimin içerisinde)
	-> Question 1
		-> Options 1 (Option 1, Option 2)
		-> Correct Answer Order
 -> Title
 -> Description
 -> Content Type (sadece text, video, zamanlı text, both)
 -> Lesson Content (array şeklinde olursa birden fazla content görürüz, kullanıcı skipleyerek okur)
 -> Created By


İşi basitçe bitirmeye çalış, komplikeleştirmeye çalışma. Kompleks yapma.


MongoDB Database Schema:

Table Users {
  _id UUID [primary key]
  email VARCHAR(255) [unique, not null]
  password VARCHAR(255) [not null]
  firstName VARCHAR(100) [not null]
  lastName VARCHAR(100) [not null]
  role ENUM('Trainer', 'Trainee') [not null]
  createdAt TIMESTAMP [default: '2025-01-01 00:00:00']
  updatedAt TIMESTAMP
}

Table Lessons {
  _id UUID [primary key]
  title VARCHAR(255) [not null]
  description TEXT
  contentType ENUM('Text', 'Video', 'Both') [not null]
  textContent TEXT
  videoURL VARCHAR(500)
  timeBased INTEGER
  createdBy UUID [not null, ref: > Users._id]
  createdAt TIMESTAMP [default: '2025-01-01 00:00:00']
}

Table AssignedLessons {
  _id UUID [primary key]
  lessonID UUID [not null, ref: > Lessons._id]
  traineeID UUID [not null, ref: > Users._id]
  trainerID UUID [not null, ref: > Users._id]
  status ENUM('Assigned', 'In Progress', 'Completed') [not null, default: 'Assigned']
  startedAt TIMESTAMP
  completedAt TIMESTAMP
  maxAttempts INTEGER [default: 1]
}

Table Questions {
  _id UUID [primary key]
  lessonID UUID [not null, ref: > Lessons._id]
  trainerID UUID [not null, ref: > Users._id]
  questionText TEXT [not null]
  options JSONB [not null] // {'A': 'Option 1', 'B': 'Option 2', 'C': 'Option 3', 'D': 'Option 4'}
  correctAnswer VARCHAR(10) [not null] // 'A', 'B', 'C', 'D'
  timeLimit INTEGER
  createdAt TIMESTAMP [default: '2025-01-01 00:00:00']
}

Table Analytics {
  _id UUID [primary key]
  trainerID UUID [not null, ref: > Users._id]
  traineeID UUID [not null, ref: > Users._id]
  lessonID UUID [not null, ref: > Lessons._id]
  totalQuestions INTEGER [not null]
  correctAnswers INTEGER [not null]
  avgResponseTime FLOAT
  attempts INTEGER [not null]
  generatedAt TIMESTAMP [default: '2025-01-01 00:00:00']
}



	